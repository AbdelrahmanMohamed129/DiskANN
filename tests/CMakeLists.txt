# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT license.

set(CMAKE_CXX_STANDARD 14)

add_executable(build_memory_index build_memory_index.cpp )
if(MSVC)
	target_link_options(build_memory_index PRIVATE /MACHINE:x64 /DEBUG:FULL "/INCLUDE:_tcmalloc")
	target_link_libraries(build_memory_index debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
	target_link_libraries(build_memory_index optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
else() 
	target_link_libraries(build_memory_index ${PROJECT_NAME} -ltcmalloc Boost::program_options)
endif()

add_executable(search_memory_index search_memory_index.cpp )
if(MSVC)
	target_link_options(search_memory_index PRIVATE /MACHINE:x64 /DEBUG:FULL)
	target_link_libraries(search_memory_index debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
	target_link_libraries(search_memory_index optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
else() 
	target_link_libraries(search_memory_index ${PROJECT_NAME} aio -ltcmalloc Boost::program_options)
endif()

add_executable(build_disk_index build_disk_index.cpp )
if(MSVC)
	target_link_options(build_disk_index PRIVATE /MACHINE:x64 /DEBUG:FULL "/INCLUDE:_tcmalloc")
	target_link_libraries(build_disk_index debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
	target_link_libraries(build_disk_index optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
else() 
	target_link_libraries(build_disk_index ${PROJECT_NAME} -ltcmalloc aio Boost::program_options)
endif()

add_executable(search_disk_index search_disk_index.cpp
    ${PROJECT_SOURCE_DIR}/src/aux_utils.cpp )
if(MSVC)
	target_link_options(search_disk_index PRIVATE /MACHINE:x64 /DEBUG:FULL)
	target_link_libraries(search_disk_index debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib)
	target_link_libraries(search_disk_index optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib)
else() 
	target_link_libraries(search_disk_index ${PROJECT_NAME} aio -ltcmalloc Boost::program_options)
endif()


# add_executable(range_search_disk_index range_search_disk_index.cpp
#     ${PROJECT_SOURCE_DIR}/src/aux_utils.cpp )
# if(MSVC)
# 	target_link_options(range_search_disk_index PRIVATE /MACHINE:x64 /DEBUG:FULL)
# 	target_link_libraries(range_search_disk_index debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib)
# 	target_link_libraries(range_search_disk_index optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib)
# else() 
# 	target_link_libraries(range_search_disk_index ${PROJECT_NAME} aio -ltcmalloc Boost::program_options)
# endif()

#add_executable(test_incremental_index test_incremental_index.cpp
#     ${PROJECT_SOURCE_DIR}/src/aux_utils.cpp )
#if(MSVC)
# 	target_link_options(test_incremental_index PRIVATE /MACHINE:x64 /DEBUG:FULL)
# 	target_link_libraries(test_incremental_index debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib)
# 	target_link_libraries(test_incremental_index optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib)
#else() 
# 	target_link_libraries(test_incremental_index ${PROJECT_NAME} -ltcmalloc Boost::program_options)
#endif()

# add_executable(test_streaming_scenario test_streaming_scenario.cpp)
# if(MSVC)
# 	target_link_options(test_streaming_scenario PRIVATE /MACHINE:x64 /DEBUG:FULL)
# 	target_link_libraries(test_streaming_scenario debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
# 	target_link_libraries(test_streaming_scenario optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
# else() 
# 	target_link_libraries(test_streaming_scenario ${PROJECT_NAME} -ltcmalloc Boost::program_options)
# endif()

# add_executable(search_memory_index_dynamic search_memory_index_dynamic.cpp)
# if(MSVC)
# 	target_link_options(search_memory_index_dynamic PRIVATE /MACHINE:x64 /DEBUG:FULL)
# 	target_link_libraries(search_memory_index_dynamic debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
# 	target_link_libraries(search_memory_index_dynamic optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
# else() 
# 	target_link_libraries(search_memory_index_dynamic ${PROJECT_NAME} -ltcmalloc Boost::program_options)
# endif()


# add_executable(test_delete_cycles test_delete_cycles.cpp)
# if(MSVC)
# 	target_link_options(test_delete_cycles PRIVATE /MACHINE:x64 /DEBUG:FULL)
# 	target_link_libraries(test_delete_cycles debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
# 	target_link_libraries(test_delete_cycles optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
# else() 
# 	target_link_libraries(test_delete_cycles ${PROJECT_NAME} -ltcmalloc Boost::program_options)
# endif()  

# add_executable(test_compacted_latency test_compacted_latency.cpp)
# if(MSVC)
# 	target_link_options(test_compacted_latency PRIVATE /MACHINE:x64 /DEBUG:FULL)
# 	target_link_libraries(test_compacted_latency debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
# 	target_link_libraries(test_compacted_latency optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
# else() 
# 	target_link_libraries(test_compacted_latency ${PROJECT_NAME} -ltcmalloc Boost::program_options)
# endif()  

add_executable(build_with_query_data build_with_query_data.cpp)
if(MSVC)
	target_link_options(build_with_query_data PRIVATE /MACHINE:x64 /DEBUG:FULL)
	target_link_libraries(build_with_query_data debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
	target_link_libraries(build_with_query_data optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
else() 
	target_link_libraries(build_with_query_data ${PROJECT_NAME} -ltcmalloc Boost::program_options)
endif()  

add_executable(test_ood_streaming test_ood_streaming.cpp)
if(MSVC)
	target_link_options(test_ood_streaming PRIVATE /MACHINE:x64 /DEBUG:FULL)
	target_link_libraries(test_ood_streaming debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
	target_link_libraries(test_ood_streaming optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
else() 
	target_link_libraries(test_ood_streaming ${PROJECT_NAME} -ltcmalloc Boost::program_options)
endif() 

add_executable(test_ood_cycles test_ood_cycles.cpp)
if(MSVC)
	target_link_options(test_ood_cycles PRIVATE /MACHINE:x64 /DEBUG:FULL)
	target_link_libraries(test_ood_cycles debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
	target_link_libraries(test_ood_cycles optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
else() 
	target_link_libraries(test_ood_cycles ${PROJECT_NAME} -ltcmalloc Boost::program_options)
endif()  

add_executable(build_from_inserts build_from_inserts.cpp)
if(MSVC)
	target_link_options(build_from_inserts PRIVATE /MACHINE:x64 /DEBUG:FULL)
	target_link_libraries(build_from_inserts debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
	target_link_libraries(build_from_inserts optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib ${PROJECT_SOURCE_DIR}/gperftools/x64/Release-Patch/libtcmalloc_minimal.lib)
else() 
	target_link_libraries(build_from_inserts ${PROJECT_NAME} -ltcmalloc Boost::program_options)
endif()  
